{{- range $i, $e := until (int .Values.clientInstanceCount) }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ (include "serverclient.fullname" $)}}-client-{{ $i }}
  labels:
    {{- include "serverclient.labels" $ | nindent 4 }}-client-{{ $i }}
  namespace: {{ $.Release.Namespace }}
spec:
  progressDeadlineSeconds: 600
  replicas: {{ $.Values.deployment.client.clientReplicaCount }}
  selector:
    matchLabels:
      {{- include "serverclient.selectorLabels" $| nindent 6 }}-client-{{ $i }}
  template:
    metadata:
      annotations:
        {{- toYaml $.Values.deployment.podAnnotations | nindent 8 }}
      labels:
        {{- include "serverclient.selectorLabels" $ | nindent 8 }}-client-{{ $i }}
    spec:
      imagePullSecrets:
        {{- toYaml $.Values.deployment.imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml $.Values.deployment.podSecurityContext | nindent 8 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
        - name: {{ $.Chart.Name }}-{{ $i }}
          image: "{{ $.Values.deployment.image.registry }}/{{ $.Values.deployment.image.repository }}:{{ $.Values.deployment.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.deployment.image.pullPolicy }}
          resources:
            {{- toYaml $.Values.deployment.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          lifecycle:
            preStop:
              exec:
                command: 
                {{- toYaml $.Values.deployment.clientPreStopHookCommand | nindent 18 }}
          {{- if $.Values.deployment.client.clientCommand }}
          command:
            {{- $args := list -}}
            {{- $args = "-r" | append $args -}}
            {{- $args = (printf "%d" ($.Values.deployment.client.requestsArg | int)) | append $args -}}
            {{- $args = "-d" | append $args -}}
            {{- $args = (printf "%d" ($.Values.deployment.client.requestDelayArg | int)) | append $args -}}
            {{- $svcName := (printf "%s-%d" (include "serverclient.fullname"  $) .) -}}
            {{- $svcFqdnInternal := (printf "%s.%s.svc.cluster.local" ($svcName) $.Release.Namespace) -}}
            {{- if eq $.Values.service.type "LoadBalancer" }} 
            {{- $svcFqdnExternal := (printf "%s.%s.cloudapp.azure.com" ($svcName) $.Values.azureRegion) -}}
            {{- toYaml (concat (append $.Values.deployment.client.clientCommand $svcFqdnExternal) $args) | nindent 12 }}
            {{- else }}
            {{- toYaml  (concat (append $.Values.deployment.client.clientCommand $svcFqdnInternal) $args) | nindent 12 }}
            {{- end }}
          {{- end }}
      initContainers:
        - name: init-{{ $.Chart.Name }}-{{ $i }}
          image: "{{ $.Values.deployment.image.registry }}/{{ $.Values.deployment.image.repository }}:{{ $.Values.deployment.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $.Values.deployment.image.pullPolicy }}
          command: ["ping", "-n", "60", "localhost"]
      nodeSelector:
        {{- toYaml $.Values.nodeSelector | nindent 8 }}
      terminationGracePeriodSeconds: {{ $.Values.deployment.terminationGracePeriodSeconds }}
      tolerations:
        {{- toYaml $.Values.deployment.tolerations | nindent 8 }}
{{- end }}